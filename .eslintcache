[{"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\index.js":"1","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\App.js":"2","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\GlobalStyles.js":"3","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Router.js":"4","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Header.js":"5","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\index.js":"6","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\HomeContainer.js":"7","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\HomePresenter.js":"8","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\index.js":"9","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\SearchContainer.js":"10","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\SearchPresenter.js":"11","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\index.js":"12","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\TVContainer.js":"13","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\TVPresenter.js":"14","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\index.js":"15","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\DetailPresenter.js":"16","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\DetailContainer.js":"17","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\api.js":"18","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Loader.js":"19","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Section.js":"20","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Poster.js":"21","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Message.js":"22"},{"size":166,"mtime":1606873603486,"results":"23","hashOfConfig":"24"},{"size":385,"mtime":1606876165307,"results":"25","hashOfConfig":"24"},{"size":585,"mtime":1606874344857,"results":"26","hashOfConfig":"24"},{"size":1177,"mtime":1606891007975,"results":"27","hashOfConfig":"24"},{"size":1789,"mtime":1606883469741,"results":"28","hashOfConfig":"24"},{"size":77,"mtime":1606876764503,"results":"29","hashOfConfig":"24"},{"size":1850,"mtime":1606898172046,"results":"30","hashOfConfig":"24"},{"size":3168,"mtime":1606890549879,"results":"31","hashOfConfig":"24"},{"size":83,"mtime":1606876752897,"results":"32","hashOfConfig":"24"},{"size":2503,"mtime":1606958440335,"results":"33","hashOfConfig":"24"},{"size":2408,"mtime":1606958323256,"results":"34","hashOfConfig":"24"},{"size":71,"mtime":1606876734770,"results":"35","hashOfConfig":"24"},{"size":1735,"mtime":1606889283753,"results":"36","hashOfConfig":"24"},{"size":2889,"mtime":1606892878549,"results":"37","hashOfConfig":"24"},{"size":83,"mtime":1606882576333,"results":"38","hashOfConfig":"24"},{"size":3620,"mtime":1606894644151,"results":"39","hashOfConfig":"24"},{"size":2284,"mtime":1606896087336,"results":"40","hashOfConfig":"24"},{"size":1050,"mtime":1606874563940,"results":"41","hashOfConfig":"24"},{"size":381,"mtime":1606883570519,"results":"42","hashOfConfig":"24"},{"size":743,"mtime":1606883702872,"results":"43","hashOfConfig":"24"},{"size":1858,"mtime":1606883668671,"results":"44","hashOfConfig":"24"},{"size":565,"mtime":1606883627019,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"qq83et",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\index.js",[],["96","97"],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\App.js",["98"],"import GlobalStyles from './GlobalStyles';\nimport reset from \"styled-reset\";\nimport Router from './Router';\nfunction App() {\n  return (\n  <>\n    <GlobalStyles />      \n    <Router />\n  </>\n  );\n}\n\n// 메뉴\n// 영화, tv, search\n\n// 영화 목록\n// 개봉중\n// 상영예정\n// 인기영화\n\n// tv 목록 \n\n// search 결과 목록\n// 영화 결과\n// show 결과\n\nexport default App;\n","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\GlobalStyles.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Router.js",["99"],"import {Route,Switch, HashRouter as Router} from 'react-router-dom';\r\nimport React from 'react';\r\nimport Header from './Header';\r\nimport Home from '../routes/Home';\r\nimport Detail from '../routes/Detail';\r\nimport Search from '../routes/Search';\r\nimport TV from '../routes/TV';\r\n// Router 관리 component\r\n\r\nexport default () =>(\r\n                    <Router>                        \r\n                        <Header />\r\n                        {/* Switch가 없이 router를 배치하면 모든 route를 탄다.\r\n                        Switch를 활용하면 오로지 하나의 Route 만을 타게 된다.*/}\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={Home}></Route>\r\n                            <Route path=\"/tv\" exact component={TV}></Route>\r\n                            <Route path=\"/search\" exact component={Search}></Route>\r\n                            <Route path=\"/movie/:id\" exact component={Detail}></Route>\r\n                            <Route path=\"/show/:id\" exact component={Detail}></Route>                            \r\n                        </Switch>\r\n                    </Router>\r\n                    );","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Header.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\index.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\HomeContainer.js",["100","101"],"import React from \"react\";\r\nimport HomePresenter from './HomePresenter';\r\nimport {moviesApi} from '../../api'\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);        \r\n    }\r\n\r\n    state = {\r\n        nowPlaying:null,\r\n        upcoming:null,\r\n        popular:null,\r\n        error:null,\r\n        loading:true\r\n\r\n    }\r\n    // 함수에 async 적용하여 비동기 속성 추가\r\n    \r\n    async componentDidMount(){\r\n        // data :{result:, [{}, {}, {}]}\r\n        \r\n        try {\r\n                const {\r\n                    data: {results: nowPlaying},\r\n        \r\n                } = await moviesApi.nowPlaying();\r\n                //const nowPalying = (await moviesApi.nowpalying()).data.results.nowPlaying;            \r\n                const {\r\n                    data: {results: upcoming},\r\n        \r\n                } = await moviesApi.upcoming();\r\n                const {\r\n                    data: {results: popular},\r\n        \r\n                } = await moviesApi.popular();       \r\n                this.setState({\r\n                    nowPlaying,\r\n                    upcoming,\r\n                    popular\r\n                });                       \r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"영화정보를 찾을 수 없습니다.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading:false\r\n            });            \r\n        }\r\n    }\r\n\r\n    // 함수형 컴포넌트에서 return에 해당된다.\r\n    render(){\r\n\r\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\r\n\r\n        return <HomePresenter \r\n            nowPlaying={nowPlaying}\r\n            upcoming={upcoming}\r\n            popular={popular}\r\n            error={error}\r\n            loading={loading}\r\n        />;\r\n    }\r\n}","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Home\\HomePresenter.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\index.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\SearchContainer.js",["102"],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Search\\SearchPresenter.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\index.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\TVContainer.js",["103","104"],"import React from \"react\";\r\nimport TVPresenter from './TVPresenter';\r\nimport {tvApi} from '../../api';\r\n\r\nexport default class extends React.Component{\r\n    constructor(props){\r\n        super(props);        \r\n    }\r\n    state = {        \r\n        topRated:null,\r\n        popular:null,\r\n        airingToday:null,\r\n        error:null,\r\n        loading:true\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        try {\r\n            const {\r\n                data: {results: topRated},\r\n    \r\n            } = await tvApi.topRated();\r\n            //const nowPalying = (await moviesApi.nowpalying()).data.results.nowPlaying;            \r\n            const {\r\n                data: {results: popular},\r\n    \r\n            } = await tvApi.popular();\r\n            const {\r\n                data: {results: airingToday},\r\n    \r\n            } = await tvApi.airingToday();       \r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });                       \r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"TV정보를 찾을 수 없습니다.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading:false\r\n            });            \r\n        }\r\n    }\r\n\r\n    // 함수형 컴포넌트에서 return에 해당된다.\r\n    render(){\r\n        const {\r\n            topRated,\r\n            popular,\r\n            airingToday,\r\n            error,\r\n            loading           \r\n        } = this.state;\r\n        return <TVPresenter \r\n            topRated={topRated}\r\n            popular={popular}\r\n            airingToday={airingToday}\r\n            error={error}\r\n            loading={loading}\r\n         />;\r\n    }\r\n}","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\TV\\TVPresenter.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\index.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\DetailPresenter.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\routes\\Detail\\DetailContainer.js",["105","106"],"import React from \"react\";\r\nimport DetailPresenter from './DetailPresenter';\r\nimport {moviesApi, tvApi} from '../../api';\r\n// Contrainer의 역할 : App에서 사용되는 기능, 상태,\r\n// 구현하고 Presenter에 전달\r\n\r\n\r\nexport default class extends React.Component{\r\n    // 생성자가 할 일\r\n    constructor(props){\r\n        super(props);        \r\n        \r\n        const {\r\n            location: {pathname}        \r\n        } = props;\r\n\r\n        this.state = {\r\n            result:null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\")\r\n        }\r\n    }\r\n    state = {\r\n        movieDetail:null,\r\n        tvDetail:null\r\n    }\r\n    async componentDidMount(){\r\n        // id 가지고 오기 -> match.params\r\n        // 만약에 id가 안들어오면 HOME으로 이동 history의 push 함수 이용\r\n        // 사용자의 요청을 서버가 받고 재요청하는것 : redirect        \r\n        const {match: {params: {id}},\r\n               history: {push}\r\n        } = this.props;\r\n\r\n        const parsedId = parseInt(id);\r\n        let result = null;\r\n        const {isMovie } = this.state;\r\n\r\n        if(isNaN(parsedId)){\r\n            // Home으로 redirect\r\n            return push(\"/\");\r\n        }\r\n        const {data} = await moviesApi.movieDetail(parsedId);\r\n        \r\n        \r\n\r\n        try {        \r\n            if (isMovie){\r\n                ({data:result} = await moviesApi.movieDetail(parsedId));\r\n                                \r\n            }else{\r\n                ({data:result} = await tvApi.showDetail(parsedId));\r\n            }\r\n        // const {data:{result}} = await isMovie ?  moviesApi.movieDetail(parsedId)\r\n        //                         : tvApi.showDetail(parsedId);\r\n        } catch (error) {\r\n            this.setState({\r\n                error:\"영화를 찾을 수 없습니다.\"\r\n            })\r\n        }finally{\r\n            this.setState({\r\n                loading:false, result\r\n                }                \r\n            )\r\n        }\r\n    }\r\n    // 함수형 컴포넌트에서 return에 해당된다.\r\n    render(){\r\n        const {result, error, loading} = this.state;\r\n        return <DetailPresenter result={result} error={error} loading={loading} />;\r\n    }\r\n}","D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\api.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Loader.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Section.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Poster.js",[],"D:\\data_science\\vs_code_workspace\\react\\movieframe\\src\\components\\Message.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":8,"nodeType":"113","messageId":"114","endLine":2,"endColumn":13},{"ruleId":"115","severity":1,"message":"116","line":10,"column":1,"nodeType":"117","endLine":23,"endColumn":23},{"ruleId":"115","severity":1,"message":"118","line":5,"column":1,"nodeType":"117","endLine":66,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":6,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":6},{"ruleId":"115","severity":1,"message":"118","line":5,"column":1,"nodeType":"117","endLine":85,"endColumn":2},{"ruleId":"115","severity":1,"message":"118","line":5,"column":1,"nodeType":"117","endLine":65,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":6,"column":5,"nodeType":"121","messageId":"122","endLine":8,"endColumn":6},{"ruleId":"115","severity":1,"message":"118","line":8,"column":1,"nodeType":"117","endLine":73,"endColumn":2},{"ruleId":"111","severity":1,"message":"123","line":44,"column":16,"nodeType":"113","messageId":"114","endLine":44,"endColumn":20},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'reset' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Unexpected default export of anonymous class","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]